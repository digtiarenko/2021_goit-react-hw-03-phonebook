{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Find/Find.module.css","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/InputForm/InputForm.jsx","components/Find/Find.jsx","App.js","index.js","components/ContactItem/ContactItem.module.css","components/InputForm/InputForm.module.css"],"names":["module","exports","ContactItem","id","number","name","onDeleteContact","className","styles","singleContact","contactName","btn","onClick","ContactList","list","section","map","InputForm","state","submitContact","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","action","this","htmlFor","placeholder","input","type","onChange","pattern","title","required","Component","Find","newFilter","App","contacts","filter","addContact","newContact","shortid","generate","find","contact","alert","prevState","deleteContact","changeFilter","target","localStorageContacts","JSON","parse","localStorage","getItem","prevProps","contactsToStore","stringify","setItem","normalizedFilter","toLowerCase","filteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31172603.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactList_section__PNnzJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Find_input__2AVLZ\"};","import styles from './ContactItem.module.css';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({ id, number, name, onDeleteContact }) => {\r\n  return (\r\n    <li key={id} className={styles.singleContact}>\r\n      <p className={styles.contactName}>{name}</p>\r\n      <span>{number}</span>\r\n      <button\r\n        className={styles.btn}\r\n        onClick={() => {\r\n          onDeleteContact(id);\r\n        }}\r\n      >\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import styles from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from '../ContactItem';\r\n\r\nconst ContactList = ({ list, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.section}>\r\n      {list.map(({ id, name, number }) => {\r\n        return (\r\n          <ContactItem\r\n            number={number}\r\n            name={name}\r\n            key={id}\r\n            id={id}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  list: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { Component } from 'react';\r\nimport styles from './InputForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass InputForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  submitContact = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"section\" action=\"\" onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"\">\r\n          <p className=\"subHeader\">Add Your Contact Here</p>\r\n          <input\r\n            placeholder=\"Enter name\"\r\n            className={styles.input}\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.submitContact}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n\r\n          <input\r\n            placeholder=\"Enter phonenumber\"\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.submitContact}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <button className={styles.btn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </label>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nInputForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default InputForm;\r\n","import styles from './Find.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Find = ({ value, newFilter }) => {\r\n  return (\r\n    <form>\r\n      <label>\r\n        <span> Find Your Contact</span>\r\n        <input\r\n          className={styles.input}\r\n          value={value}\r\n          onChange={newFilter}\r\n          name=\"filter\"\r\n          placeholder=\"Enter search query\"\r\n          type=\"text\"\r\n        />\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFind.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  newFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Find;\r\n","import { Component } from 'react';\r\nimport ContactList from './components/ContactList/';\r\nimport InputForm from './components/InputForm/InputForm';\r\nimport Find from './components/Find';\r\nimport shortid from 'shortid';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    const newContact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    if (this.state.contacts.find(contact => contact.name === name)) {\r\n      alert(`${name} is already in the phonebook`);\r\n    } else {\r\n      this.setState(prevState => ({\r\n        contacts: [newContact, ...prevState.contacts],\r\n      }));\r\n    }\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  changeFilter = event => {\r\n    this.setState({\r\n      filter: event.target.value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const localStorageContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (localStorageContacts) {\r\n      this.setState({\r\n        contacts: localStorageContacts,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      const contactsToStore = JSON.stringify(this.state.contacts);\r\n      localStorage.setItem('contacts', contactsToStore);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { contacts } = this.state;\r\n\r\n    const normalizedFilter = this.state.filter.toLowerCase();\r\n\r\n    const filteredContacts = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <InputForm onSubmit={this.addContact} />\r\n        <Find value={this.state.filter} newFilter={this.changeFilter} />\r\n        <h2>Contacts</h2>\r\n        <ContactList\r\n          list={filteredContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactItem_btn__1kVtd\",\"contactName\":\"ContactItem_contactName__1IyOn\",\"singleContact\":\"ContactItem_singleContact__3swJ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputForm_input__3GknJ\",\"btn\":\"InputForm_btn__3zysd\"};"],"sourceRoot":""}